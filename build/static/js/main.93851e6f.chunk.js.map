{"version":3,"sources":["utils/queries/masterData.js","pages/GameConditions.js","components/UI/Spinner.js","utils/createShare.js","pages/GameResults.js","components/Error/ErrorComponent.js","components/UI/DialogBasic.js","utils/calcGame.js","pages/Game.js","components/Header.js","components/Footer.js","App.js","theme/theme.js","client.js","index.js"],"names":["GET_MASTER_DATA","gql","GET_NOUN","useStyles","makeStyles","theme","paper","padding","spacing","error","backgroundColor","palette","secondary","main","marginBottom","btn","color","primary","checkConditions","conditions","nonChecked","Object","keys","forEach","key","GameConditions","variant","gameOn","classes","React","useState","character","genre","location","raiting","trop","noun","state","setState","setNonChecked","useEffect","handleChange","event","target","name","checked","formConditions","FormControl","component","fullWidth","FormLabel","FormGroup","FormControlLabel","control","Switch","onChange","label","Tooltip","title","placement","gameButton","Button","onClick","size","Typography","className","Paper","Spinner","style","position","top","left","width","height","role","translation","root","paddingTop","paddingBottom","card","maxWidth","margin","media","textAlign","condition","GameResults","results","back","link","textRes","idx","map","out","name_rus","join","length","href","encodeURIComponent","getShareUrl","Card","CardMedia","image","CardContent","gutterBottom","Grid","container","output","Fragment","item","xs","CardActions","ErrorComponent","box","DialogBasic","open","handleCancel","handleClose","handleAgree","agreeText","disagreeText","handleChangeSaveChoice","Dialog","onClose","aria-labelledby","aria-describedby","Box","justify","autoFocus","Checkbox","getRandom","min","max","Math","floor","random","getMax","data","createData","filter","char","getCondition","basicData","getNoun","a","maxNumber","var1","var2","variables","id","getResults","masterData","getNounFuction","res","marginTop","tab","fontSize","Game","oldEnough","value","setValue","show","setResults","dialogOpen","dialog","setDialog","showContent","setShowContent","useQuery","queries","queryLodading","loading","queryError","useMutation","getNounById","nounLoading","nounError","getMasterData","chooseYourGame","conditionType","conditionId","flat","Container","fixed","localStorage","setItem","square","Tabs","indicatorColor","textColor","newValue","Tab","disabled","darklime","fontFamily","marginRight","Header","AppBar","Toolbar","IconButton","edge","aria-label","src","alt","Footer","App","getItem","createMuiTheme","lime","grey","yellow","typography","errorLink","onError","graphQLErrors","networkError","message","locations","path","extensions","console","log","ApolloLink","from","HttpLink","uri","process","client","ApolloClient","cache","InMemoryCache","freezeResults","connectToDevTools","ReactDOM","render","ApolloProvider","StrictMode","document","getElementById"],"mappings":"knCAEO,IAAMA,EAAmBC,YAAJ,KA2BfC,EAAYD,YAAJ,K,GAOOA,YAAJ,K,4HC3BlBE,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,MAAO,CACLC,QAASF,EAAMG,QAAQ,IAEzBC,MAAO,CACLC,gBAAiBL,EAAMM,QAAQC,UAAUC,KACzCC,aAAcT,EAAMG,QAAQ,IAE9BO,IAAK,CACHC,MAAOX,EAAMM,QAAQM,QAAQL,eAI3BM,EAAkB,SAACC,GACvB,IAAIC,GAAa,EAIjB,OAFAC,OAAOC,KAAKH,GAAYI,SAAQ,SAAAC,GAAG,OAAKJ,EAAaA,IAAeD,EAAWK,MAExEJ,GAGIK,EAAiB,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,OAEjCC,EAAUzB,IAFmC,EAIzB0B,IAAMC,SAAS,CACvCC,WAAW,EACXC,OAAO,EACPC,UAAU,EACVC,SAAS,EACTC,MAAM,EACNC,MAAM,IAV2C,mBAI5CC,EAJ4C,KAIrCC,EAJqC,OAafT,IAAMC,UAAS,GAbA,mBAa5CV,EAb4C,KAahCmB,EAbgC,KAenDV,IAAMW,WAAU,WACE,IAAZd,IACFa,GAAc,GACdD,EAAS,CACPP,WAAW,EACXC,OAAO,EACPC,UAAU,EACVC,SAAS,EACTC,MAAM,EACNC,MAAM,KAGM,IAAZV,GAAea,EAAcrB,EAAgBmB,MAChD,CAACX,IAIJ,IAAMe,EAAe,SAACC,GACpBJ,EAAS,eAAKD,EAAN,eAAcK,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,WACnD3B,EAAgB,eAAKmB,EAAN,eAAcK,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,WAAYN,GAAc,GACvFA,GAAc,IAOfO,EACJ,kBAACC,EAAA,EAAD,CAAaC,UAAU,WAAWC,WAAS,GACzC,kBAACC,EAAA,EAAD,CAAWF,UAAU,UAArB,oIACA,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAAQT,QAASR,EAAMN,UAAWwB,SAAUd,EAAcG,KAAK,YAAY5B,MAAM,YAC1FwC,MAAM,2DAER,kBAACJ,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAAQT,QAASR,EAAMJ,SAAUsB,SAAUd,EAAcG,KAAK,WAAW5B,MAAM,YACxFwC,MAAM,mCAER,kBAACJ,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAAQT,QAASR,EAAMH,QAASqB,SAAUd,EAAcG,KAAK,UAAU5B,MAAM,YACtFwC,MAAM,+CAER,kBAACJ,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAAQT,QAASR,EAAML,MAAOuB,SAAUd,EAAcG,KAAK,QAAQ5B,MAAM,YAClFwC,MAAM,6BAER,kBAACJ,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAAQT,QAASR,EAAMF,KAAMoB,SAAUd,EAAcG,KAAK,OAAO5B,MAAM,YAChFwC,MAAM,6BAER,kBAACC,EAAA,EAAD,CAASC,MAzFD,yWAyFiBC,UAAU,gBACjC,kBAACP,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAAQT,QAASR,EAAMD,KAAMmB,SAAUd,EAAcG,KAAK,OAAO5B,MAAM,YAChFwC,MAAM,+DAMVI,EAAa,kBAACC,EAAA,EAAD,CAAQnC,QAAQ,YAAYV,MAAM,UAAU8C,QArC5C,WACZ5C,EAAgBmB,IAAQV,EAAOU,IAoC8C0B,KAAK,SACvF,kBAACC,EAAA,EAAD,CAAYtC,QAAQ,KAAKuC,UAAWrC,EAAQb,KAA5C,yCAIF,OACE,kBAACmD,EAAA,EAAD,CAAOD,UAAWrC,EAAQtB,OACtBc,GAAc,kBAAC4C,EAAA,EAAD,CAAYtC,QAAQ,QAAQsB,UAAU,IAAIhC,MAAM,QAAQiD,UAAWrC,EAAQnB,OAA3E,8JACH,IAAZiB,GAAiBoB,EACjBc,IC7FQO,EAnBC,WAUd,OACE,yBAAKF,UAAU,yBACb,yBAAKA,UAAU,iBAAiBG,MAVf,CACnBC,SAAU,WACVC,IAAK,MACLC,KAAK,MACLC,MAAO,OACPC,OAAQ,QAK+CC,KAAK,UACxD,0BAAMT,UAAU,WAAhB,iB,6CCfFU,EAAc,CAClB,UAAa,yDACb,MAAS,2BACT,QAAW,6CACX,KAAQ,2BACR,SAAY,iCACZ,KAAQ,kCCCJxE,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCuE,KAAM,CACJC,WAAYxE,EAAMG,QAAQ,GAC1BsE,cAAezE,EAAMG,QAAQ,IAE/BuE,KAAM,CACJC,SAAU,IACVC,OAAQ,UAEVC,MAAO,CACLT,OAAQ,KAEVf,MAAO,CACLyB,UAAW,QAEbC,UAAW,CACTD,UAAW,aAITR,EAAc,CAClB,UAAa,yDACb,MAAS,2BACT,QAAW,6CACX,KAAQ,2BACR,SAAY,iCACZ,KAAQ,kCAGGU,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,KAE9B3D,EAAUzB,IAeVqF,ED5CmB,SAACF,GAE1B,IAIIG,EAAU,GAWd,OATApE,OAAOC,KAAKgE,GAAS/D,SAAQ,SAACC,EAAKkE,GACjCD,EAAUA,EAAQd,EAAYnD,GAAK,KAAK8D,EAAQ9D,GAAKmE,KAAI,SAAAC,GAAG,OAAIA,EAAIC,YAAUC,KAAK,YAC/EJ,IAAQJ,EAAQS,OAAO,IACzBN,GAAkB,SAITO,yCAAcC,mBAAmBR,GAAjCO,wBAA4EC,mBAZ3E,uBCyCDC,CAAYZ,GAEzB,OACE,6BACE,kBAACa,EAAA,EAAD,CAAMlC,UAAWrC,EAAQmD,MACvB,kBAACqB,EAAA,EAAD,CACEnC,UAAWrC,EAAQsD,MACnBmB,MAA8B,0BAC9B3C,MAAM,wBACNI,QAASyB,IAEX,kBAACe,EAAA,EAAD,KACE,kBAACtC,EAAA,EAAD,CAAYuC,cAAY,EAAC7E,QAAQ,KAAKsB,UAAU,MAAhD,qDAGA,kBAACwD,EAAA,EAAD,CAAMC,WAAS,EAACjG,QAAS,GACrBa,OAAOC,KAAKgE,GAASK,KAAI,SAAAnE,GAAG,OA7BhBkC,EA6BmClC,EA7B5BkF,EA6BiCpB,EAAQ9D,GA3BpE,kBAAC,IAAMmF,SAAP,CAAgBnF,IAAKkC,GACpB,kBAAC8C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAG5C,UAAWrC,EAAQ8B,OACpC,kBAACM,EAAA,EAAD,CAAYtC,QAAQ,QAAQsB,UAAU,OAAOhC,MAAM,UAAUiD,UAAWrC,EAAQ8B,OAAQiB,EAAYjB,KAEtG,kBAAC8C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAG5C,UAAWrC,EAAQwD,WACnC,kBAACpB,EAAA,EAAD,CAAYtC,QAAQ,QAAQV,MAAM,gBAAgBgC,UAAU,QAAQ0D,EAAOf,KAAI,SAAAC,GAAG,OAAIA,EAAIC,YAAUC,KAAK,SAPxF,IAACpC,EAAOgD,OAkCzB,kBAACI,EAAA,EAAD,KACE,kBAACjD,EAAA,EAAD,CAAQE,KAAK,QAAQ/C,MAAM,UAAUgF,KAAMR,GAA3C,SAGA,kBAAC3B,EAAA,EAAD,CAAQE,KAAK,QAAQ/C,MAAM,UAAU8C,QAASyB,GAA9C,qECxEJpF,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,MAAO,CACLC,QAASF,EAAMG,QAAQ,QAIduG,EAAiB,WAE5B,IAAMnF,EAAUzB,IAEhB,OACE,kBAAC+D,EAAA,EAAD,CAAOD,UAAWrC,EAAQtB,OACxB,kBAAC0D,EAAA,EAAD,CAAYtC,QAAQ,KAAKsB,UAAU,IAAIhC,MAAM,WAA7C,kG,2BCdAb,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC2G,IAAK,CACHzG,QAASF,EAAMG,QAAQ,QAIdyG,GAAc,SAAC,GAA8G,IAA7GC,EAA4G,EAA5GA,KAAmBC,GAAyF,EAAtGC,YAAsG,EAAzFD,cAAcE,EAA2E,EAA3EA,YAAaC,EAA8D,EAA9DA,UAAWC,EAAmD,EAAnDA,aAAc1E,EAAqC,EAArCA,QAAS2E,EAA4B,EAA5BA,uBACrG5F,EAAUzB,IAChB,OACE,kBAACsH,EAAA,EAAD,CACIP,KAAMA,EACNQ,QAASP,EACTQ,kBAAgB,qBAChBC,mBAAiB,4BAEnB,kBAACC,EAAA,EAAD,CAAK5D,UAAWrC,EAAQoF,KACvB,kBAACR,EAAA,EAAD,CAAMC,WAAS,EAACqB,QAAQ,gBACtB,kBAACtB,EAAA,EAAD,CAAMI,MAAI,GACP,kBAAC/C,EAAA,EAAD,CAAQC,QAASqD,EAAcnG,MAAM,WACpCuG,IAGJ,kBAACf,EAAA,EAAD,CAAMI,MAAI,GACR,kBAAC/C,EAAA,EAAD,CAAQC,QAASuD,EAAarG,MAAM,UAAU+G,WAAS,GACrDT,KAKL,kBAAClE,EAAA,EAAD,CACAC,QAAS,kBAAC2E,EAAA,EAAD,CACPnF,QAASA,EACTU,SAAUiE,EACVxG,MAAM,YAGRwC,MAAM,gM,UCxCRyE,GAAY,SAACC,EAAKC,GACtB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,GAGjDK,GAAS,SAACC,EAAMpD,GACpB,MAAkB,SAAdA,EAA6BoD,EAAKzC,OAAO,EACjCyC,GAGRC,GAAa,SAACD,EAAMpD,GACxB,MAAkB,cAAdA,EAAkCoD,EAEzB,uBAAOA,GAAP,aAAgBA,EAAKE,QAAO,SAAAC,GAAI,OAAIA,EAAK9H,WAKlD+H,GAAY,uCAAG,WAAMC,EAAWzD,EAAW0D,GAA5B,uBAAAC,EAAA,yDAEbP,EAAOC,GAAWI,EAAWzD,GAE7B4D,EAAYT,GAAOC,EAAMpD,GAEzB6D,EAAOhB,GAAU,EAAGe,GAER,cAAd5D,EARe,uBASX8D,EAAOjB,GAAU,EAAGe,GATT,iCAWR5D,EAAY,CAACoD,EAAKS,GAAOT,EAAKU,MAXtB,UAaD,SAAd9D,EAbe,iCAcE0D,EAAQ,CAACK,UAAW,CAACC,GAAIH,KAd3B,cAcX7G,EAdW,wCAeRgD,EAAY,CAAChD,EAAKoG,KAAKM,WAff,gDAkBV1D,EAAY,CAACoD,EAAKS,MAlBR,4CAAH,0DAsBLI,GAAU,uCAAG,WAAOC,EAAYnI,EAAYoI,GAA/B,uBAAAR,EAAA,sDACpBzD,EAAU,GADU,MAIRjE,OAAOC,KAAKH,GAJJ,4CAIfK,EAJe,MAKlBL,EAAWK,GALO,gCAMFoH,GAAaU,EAAW9H,GAAMA,EAAK+H,GANjC,OAMdC,EANc,OAOpBlE,EAAO,eACFA,EADE,GAEFkE,GATe,2DAcjBlE,GAdiB,4CAAH,0DCzBjBnF,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCoG,UAAW,CACTgD,UAAWpJ,EAAMG,QAAQ,GACzBM,aAAcT,EAAMG,QAAQ,IAE9BkJ,IAAK,CACHC,SAAU,cAKDC,GAAO,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAEdjI,EAAUzB,KAFmB,EAIT0B,IAAMC,SAAS,GAJN,mBAI5BgI,EAJ4B,KAIrBC,EAJqB,OAKLlI,IAAMC,SAAS,CAC3CkI,MAAM,EACN1E,QAAS,KAPwB,mBAK5BA,EAL4B,KAKnB2E,EALmB,OASPpI,IAAMC,SAAS,CACzCoI,YAAaL,EACbhH,SAAS,IAXwB,mBAS5BsH,EAT4B,KASpBC,EAToB,OAcIvI,IAAMC,SAAS+H,GAdnB,mBAc5BQ,EAd4B,KAcfC,EAde,OAgByBC,YAASC,GAApDC,EAhBkB,EAgB3BC,QAA+BC,EAhBJ,EAgBHlK,MAAmB+H,EAhBhB,EAgBgBA,KAhBhB,EAiB8BoC,YAAYJ,GAjB1C,mBAiB5BK,EAjB4B,YAiBLC,EAjBK,EAiBdJ,QAA6BK,EAjBf,EAiBQtK,MAG3C,GAAIgK,GAAiBK,EAAc,OAAO,kBAAC,EAAD,MAC1C,GAAIH,GAAcI,EAAW,OAAO,kBAAC,EAAD,MArBD,IAuB3BC,EAAkBxC,EAAlBwC,cAeFC,EAAc,uCAAG,WAAO9J,GAAP,eAAA4H,EAAA,sEAECM,GAAW2B,EAAe7J,EAAY0J,GAFvC,OAEfvF,EAFe,OAGGjE,OAAOC,KAAKgE,GACjCK,KAAI,SAAAnE,GAAG,OAAI8D,EAAQ9D,GACnBmE,KAAI,SAAAiB,GACH,MAAO,CACLsE,cAAe1J,EACf2J,aAAcvE,EAAKwC,UAGtBgC,KAAK,GAIRnB,EAAW,eAAI3E,EAAL,CAAc0E,MAAM,EAAM1E,aAff,2CAAH,sDAmBpB,OACE,kBAAC+F,EAAA,EAAD,CAAWC,OAAK,EAACrH,UAAWrC,EAAQ6E,WAEhC0D,EAAOD,YAAc,kBAAC,GAAD,CACnBhD,KAAMiD,EAAOD,WACb9C,YAAa,kBAAMgD,EAAU,eAAID,EAAL,CAAaD,YAAY,MACrD/C,aAAc,kBAAMiD,EAAU,eAAID,EAAL,CAAaD,YAAY,MACtDrH,QAASsH,EAAOtH,QAChB2E,uBAAwB,kBAAM4C,EAAU,eAAID,EAAL,CAAatH,SAAUsH,EAAOtH,YACrEwE,YAzCkB,WACpB8C,EAAOtH,SACT0I,aAAaC,QAAQ,KAAM,QAG7BpB,EAAU,eAAID,EAAL,CAAaD,YAAW,KACjCI,GAAe,IAoCThD,UAAU,iDACVC,aAAa,8CAIfjC,EAAQ0E,MAAQK,GAAe,oCAAE,kBAACnG,EAAA,EAAD,CAAOuH,QAAM,GAC9C,kBAACC,EAAA,EAAD,CACE5B,MAAOA,EACP6B,eAAe,UACfC,UAAU,UACVrI,SA3Ca,SAACb,EAAOmJ,GAC3B9B,EAAS8B,IA2CHnK,QAAQ,aAER,kBAACoK,EAAA,EAAD,CAAKtI,MAAM,sEAAeS,UAAWrC,EAAQ8H,MAC7C,kBAACoC,EAAA,EAAD,CAAKtI,MAAM,sEAAeS,UAAWrC,EAAQ8H,MAC7C,kBAACoC,EAAA,EAAD,CAAKtI,MAAM,MAAMuI,UAAQ,EAAC9H,UAAWrC,EAAQ8H,QAGjD,kBAAC,EAAD,CAAgBhI,QAAWoI,EAAOnI,OAAQsJ,KAGxC3F,EAAQ0E,MAAQK,GAAe,kBAAC,EAAD,CAAa/E,QAASA,EAAQA,QAASC,KAAM,kBAAM0E,EAAW,CAACD,MAAM,EAAO1E,QAAS,U,8BC7GtHnF,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCuE,KAAM,CACJlE,gBAAiBL,EAAMM,QAAQM,QAAQ+K,UAEzCtI,MAAO,CACL1C,MAAOX,EAAMM,QAAQM,QAAQL,UAC7BqL,WAAY,UAEd5F,MAAO,CACL7B,MAAO,OACPC,OAAQ,OACRyH,YAAa7L,EAAMG,QAAQ,QAKlB2L,GAAS,WAEpB,IAAMvK,EAAUzB,KAEhB,OACE,kBAACiM,GAAA,EAAD,CAAQ/H,SAAS,SAASJ,UAAWrC,EAAQgD,MAC3C,kBAACyH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYC,KAAK,QAAQvL,MAAM,UAAUwL,aAAW,OAAOzI,KAAK,UAC9D,yBAAK0I,IAA4B,0BAA2BC,IAAI,GAAGzI,UAAWrC,EAAQyE,SAExF,kBAACrC,EAAA,EAAD,CAAYtC,QAAQ,KAAKuC,UAAWrC,EAAQ8B,OAA5C,sFC3BKiJ,GAAS,kBAAM,kBAAC3I,EAAA,EAAD,CAAYtC,QAAQ,QAAQV,MAAM,gBAAgBgC,UAAU,QAA5D,kBCiBb4J,OAdf,WAEE,IAAM/C,EAAY0B,aAAasB,QAAQ,MAEvC,OACE,yBAAK5I,UAAU,OACb,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAO4F,UAAWA,IAAa,IAC/B,kBAAC,GAAD,Q,6FCGSxJ,GAXDyM,aAAe,CAC3BnM,QAAS,CACPM,QAAS,CAACJ,KAAOkM,KAAK,KAAMnM,UAAWmM,KAAK,KAAMf,SAAU,WAC5DpL,UAAW,CAACC,KAAMmM,KAAK,MACvBvM,MAAO,CAACI,KAAMoM,KAAO,OAEvBC,WAAY,CACVjB,WAAY,mC,8CCPVkB,GAAYC,cAAQ,YAAsC,IAAnCC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aACtCD,GACFA,EAAc1H,KAAI,YAA+C,IAA5C4H,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,KAAuB,EAAjBC,WAC7CC,QAAQC,IAAR,oCAC6BL,EAD7B,uBACmDC,EADnD,mBACuEC,OAWvEH,GAAcK,QAAQC,IAAR,2BAAgCN,OAc9C9H,GAAOqI,KAAWC,KAAK,CAC3BX,GACA,IAAIY,KAAS,CAACC,IAAKC,uCAaNC,GARA,IAAIC,KAAa,CAC9B3I,QACA4I,MAAO,IAAIC,KAAc,CACvBC,eAAe,IAEjBC,mBAAmB,ICrCrBC,IAASC,OACP,kBAACC,GAAA,EAAD,CAAgBR,OAAQA,IACtB,kBAAC,IAAMS,WAAP,KACE,kBAAC,KAAD,CAAkBtO,MAAOA,IACvB,kBAAC,GAAD,SAKNuO,SAASC,eAAe,W","file":"static/js/main.93851e6f.chunk.js","sourcesContent":["import { gql } from '@apollo/client'\r\n\r\nexport const GET_MASTER_DATA =  gql`{\r\n\tgetMasterData(fandom: 1){\r\n\t\tcharacter{\r\n\t\t\tid\r\n\t\t\tname_rus\r\n      main\r\n\t\t}\r\n\t\tlocation{\r\n\t\t\tid\r\n\t\t\tname_rus\r\n\t\t}\r\n\t\tgenre{\r\n\t\t\tid\r\n\t\t\tname_rus\r\n\t\t}\r\n\t\traiting{\r\n\t\t\tid\r\n\t\t\tname_rus\r\n\t\t}\r\n\t\ttrop{\r\n\t\t\tid\r\n\t\t\tname_rus\r\n\t\t}\r\n    noun\r\n\t}\r\n}`\r\n\r\nexport const GET_NOUN =  gql`\r\nmutation getNounById($id: ID!) {\r\n\tgetNoun(id: $id){\r\n\t\tname_rus\r\n\t}\r\n}`\r\n\r\nexport const CREATE_GAME =  gql`\r\nmutation createGame($inputData: CreateGameData!) {\r\n\tcreateGame(inputData: $inputData){\r\n    id\r\n\t\tstatus\r\n    owner\r\n    conditions {\r\n      id\r\n      conditionType\r\n      conditionItem {\r\n        id\r\n        name_rus\r\n      }\r\n    }\r\n\t}\r\n}`","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { Paper, FormControl, FormGroup, FormLabel, Switch, FormControlLabel, FormHelperText, Button, Typography, Tooltip } from '@material-ui/core'\r\n\r\n\r\nconst TOOLTIP = 'Осторожно! База слов - АГОНЬ! В смысле полный словарь Ожегова, без шуток!'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    padding: theme.spacing(5)\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  btn: {\r\n    color: theme.palette.primary.secondary,\r\n  }\r\n}))\r\n\r\nconst checkConditions = (conditions) => {\r\n  let nonChecked = true\r\n\r\n  Object.keys(conditions).forEach(key =>  nonChecked = nonChecked && !conditions[key])\r\n\r\n  return nonChecked\r\n}\r\n\r\nexport const GameConditions = ({variant, gameOn}) => {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [state, setState] = React.useState({\r\n    character: true,\r\n    genre: true,\r\n    location: true,\r\n    raiting: true,\r\n    trop: true,\r\n    noun: false\r\n  })\r\n\r\n  const [nonChecked, setNonChecked] = React.useState(false)\r\n\r\n  React.useEffect(() => {\r\n    if (variant === 0) {\r\n      setNonChecked(false)\r\n      setState({\r\n        character: true,\r\n        genre: false,\r\n        location: false,\r\n        raiting: false,\r\n        trop: false,\r\n        noun: false\r\n      })\r\n    }\r\n    if (variant === 1) setNonChecked(checkConditions(state))\r\n  }, [variant])\r\n\r\n  \r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked })\r\n    if (checkConditions({ ...state, [event.target.name]: event.target.checked })) setNonChecked(true)\r\n    else setNonChecked(false)\r\n  }\r\n\r\n  const handleGame = () => {\r\n    if (!checkConditions(state)) gameOn(state)\r\n  }\r\n\r\n  const formConditions =\r\n    <FormControl component=\"fieldset\" fullWidth>\r\n      <FormLabel component=\"legend\">выберите сложность игры</FormLabel>\r\n      <FormGroup>\r\n        <FormControlLabel\r\n          control={<Switch checked={state.character} onChange={handleChange} name=\"character\" color=\"primary\" />}\r\n          label=\"персонажи\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={state.location} onChange={handleChange} name=\"location\" color=\"primary\" />}\r\n          label=\"место\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={state.raiting} onChange={handleChange} name=\"raiting\" color=\"primary\" />}\r\n          label=\"рейтинг\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={state.genre} onChange={handleChange} name=\"genre\" color=\"primary\" />}\r\n          label=\"жанр\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={state.trop} onChange={handleChange} name=\"trop\" color=\"primary\" />}\r\n          label=\"троп\"\r\n        />\r\n        <Tooltip title={TOOLTIP} placement=\"bottom-start\">\r\n          <FormControlLabel\r\n            control={<Switch checked={state.noun} onChange={handleChange} name=\"noun\" color=\"primary\" />}\r\n            label=\"ключ-слово\"\r\n          />\r\n        </Tooltip>\r\n      </FormGroup>\r\n      </FormControl>\r\n   \r\n  const gameButton = <Button variant=\"contained\" color=\"primary\" onClick={handleGame} size=\"large\">\r\n    <Typography variant=\"h5\" className={classes.btn}>Играть</Typography>\r\n  </Button>\r\n\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      { nonChecked && <Typography variant=\"body1\" component=\"p\" color='error' className={classes.error} >Выберите хотя бы одно условие</Typography>}\r\n      {variant === 1 && formConditions}\r\n      {gameButton}\r\n    </Paper>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nconst Spinner = () => {\r\n\r\n  const spinnerStyle = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left:'50%',\r\n    width: '3rem',\r\n    height: '3rem'\r\n  }\r\n\r\n  return (\r\n    <div className=\"container text-center\">\r\n      <div className=\"spinner-border\" style={spinnerStyle} role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","const translation = {\r\n  'character': 'Персонажи',\r\n  'genre': 'Жанр',\r\n  'raiting': 'Рейтинг',\r\n  'trop': 'Троп',\r\n  'location': 'Место',\r\n  'noun': 'Слово',\r\n}\r\n\r\nexport const getShareUrl = (results) => {\r\n\r\n  const href=\"https://twitter.com/intent/tweet\"\r\n  const dataUrl=\"https://ur.a-gon.ru\"\r\n  const dataHashtags=\"urgame\"\r\n\r\n  let textRes = ''\r\n\r\n  Object.keys(results).forEach((key, idx) => {\r\n    textRes = textRes+translation[key]+': '+results[key].map(out => out.name_rus).join(' и ')\r\n    if (idx !== results.length-1) {\r\n      textRes = textRes+'; '\r\n    }\r\n  }) \r\n\r\n  const link = href+'?text='+encodeURIComponent(textRes)+';hashtags='+dataHashtags+';url='+encodeURIComponent(dataUrl)\r\n\r\n  return link\r\n}","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Grid, Card, CardMedia, CardContent, Typography, CardActions, Button } from '@material-ui/core'\r\nimport { getShareUrl } from '../utils/createShare'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingTop: theme.spacing(5),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  card: {\r\n    maxWidth: 345,\r\n    margin: '0 auto'\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  title: {\r\n    textAlign: 'left'\r\n  },\r\n  condition: {\r\n    textAlign: 'right'\r\n  }\r\n}))\r\n\r\nconst translation = {\r\n  'character': 'Персонажи',\r\n  'genre': 'Жанр',\r\n  'raiting': 'Рейтинг',\r\n  'trop': 'Троп',\r\n  'location': 'Место',\r\n  'noun': 'Слово',\r\n}\r\n\r\nexport const GameResults = ({results, back}) => {\r\n\r\n  const classes = useStyles()\r\n\r\n  const formResultsDiv = (title, output) => {\r\n    return (\r\n      <React.Fragment key={title}>\r\n       <Grid item xs={4} className={classes.title} >\r\n        <Typography variant=\"body1\" component=\"span\" color='primary' className={classes.title}>{translation[title]}</Typography>\r\n      </Grid>\r\n      <Grid item xs={8} className={classes.condition} >\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">{output.map(out => out.name_rus).join(', ')}</Typography>\r\n      </Grid>      \r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  const link = getShareUrl(results)\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.card}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={process.env.PUBLIC_URL+\"/images/card-header.png\"}\r\n          title=\"Contemplative Reptile\"\r\n          onClick={back}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Ваша игра\r\n          </Typography>\r\n          <Grid container spacing={1}>\r\n            { Object.keys(results).map(key => formResultsDiv(key, results[key])) }\r\n          </Grid>\r\n\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Button size=\"small\" color=\"primary\" href={link}>\r\n            Tweet\r\n          </Button>\r\n          <Button size=\"small\" color=\"primary\" onClick={back}>\r\n            Сыграть еще\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Paper, Typography } from '@material-ui/core'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    padding: theme.spacing(5),\r\n  },\r\n}))\r\n\r\nexport const ErrorComponent = () => {\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Typography variant=\"h5\" component=\"p\" color='primary' >Произошла ошибка!</Typography>\r\n    </Paper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Dialog, DialogActions, Button, Checkbox, FormControlLabel, Grid , Box } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  box: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))\r\n\r\nexport const DialogBasic = ({open, handleClose, handleCancel, handleAgree, agreeText, disagreeText, checked, handleChangeSaveChoice}) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Dialog\r\n        open={open}\r\n        onClose={handleCancel}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <Box className={classes.box}>\r\n       <Grid container justify=\"space-around\">\r\n         <Grid item>\r\n            <Button onClick={handleCancel} color=\"primary\">\r\n            {disagreeText}\r\n          </Button>\r\n         </Grid>\r\n         <Grid item>\r\n           <Button onClick={handleAgree} color=\"primary\" autoFocus>\r\n            {agreeText} \r\n          </Button>\r\n         </Grid>\r\n       </Grid>\r\n\r\n        <FormControlLabel\r\n        control={<Checkbox\r\n          checked={checked}\r\n          onChange={handleChangeSaveChoice}\r\n          color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Запомнить выбор на этом устройстве\"\r\n        />\r\n      </Box>\r\n    </Dialog>\r\n  )\r\n}\r\n","const getRandom = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min\r\n}\r\n\r\nconst getMax = (data, condition) => {\r\n  if (condition !== 'noun') return data.length-1\r\n  else return data\r\n}\r\n\r\nconst createData = (data, condition) => {\r\n  if (condition !== 'character') return data\r\n\r\n  const newData = [...data, ...data.filter(char => char.main)]\r\n\r\n  return newData\r\n}\r\n\r\nconst getCondition = async(basicData, condition, getNoun) => {\r\n\r\n  const data = createData(basicData, condition)\r\n\r\n  const maxNumber = getMax(data, condition)\r\n\r\n  const var1 = getRandom(0, maxNumber)\r\n\r\n  if (condition === 'character') {\r\n    const var2 = getRandom(0, maxNumber)\r\n    //если тот же самый, то второго нету\r\n    return {[condition]: [data[var1], data[var2]]}\r\n  }\r\n  if (condition === 'noun') {\r\n    const noun = await getNoun({variables: {id: var1}})\r\n    return {[condition]: [noun.data.getNoun]}\r\n  }\r\n  \r\n  return {[condition]: [data[var1]]}\r\n\r\n}\r\n\r\nexport const getResults = async (masterData, conditions, getNounFuction) => {\r\n  let results = {}\r\n\r\n//console.log('calcGame', masterData)\r\n  for (let key of Object.keys(conditions)) {\r\n    if (conditions[key]) {\r\n      const res = await getCondition(masterData[key], key, getNounFuction)\r\n      results = {\r\n        ...results,\r\n        ...res\r\n      }\r\n    }\r\n  }\r\n\r\n  return results\r\n\r\n}","import React from 'react'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport * as queries from '../utils/queries/masterData'\r\nimport { Paper, Tabs, Tab, Container, Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {GameConditions} from './GameConditions'\r\nimport Spinner from '../components/UI/Spinner'\r\nimport {GameResults} from './GameResults'\r\nimport {ErrorComponent} from '../components/Error/ErrorComponent'\r\nimport {DialogBasic} from '../components/UI/DialogBasic'\r\n\r\n\r\nimport {getResults} from '../utils/calcGame'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    marginTop: theme.spacing(5),\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  tab: {\r\n    fontSize: '1.2rem'\r\n  }\r\n}))\r\n\r\n\r\nexport const Game = ({oldEnough}) => {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [value, setValue] = React.useState(0)\r\n  const [results, setResults] = React.useState({\r\n    show: false, \r\n    results: {}\r\n  })\r\n  const [dialog, setDialog] = React.useState({\r\n    dialogOpen: !oldEnough,\r\n    checked: true\r\n  })\r\n\r\n  const [showContent, setShowContent] =  React.useState(oldEnough)\r\n\r\n  const { loading: queryLodading, error: queryError, data } = useQuery(queries.GET_MASTER_DATA)\r\n  const [getNounById, {loading: nounLoading, error: nounError}]  = useMutation(queries.GET_NOUN)\r\n  //const [createGame, {loading: gameLoading, error: gameError}]  = useMutation(queries.CREATE_GAME)\r\n\r\n  if (queryLodading || nounLoading ) return <Spinner />\r\n  if (queryError || nounError) return <ErrorComponent />\r\n\r\n  const { getMasterData } = data\r\n\r\n  const handleUserConsent = () => {\r\n    if (dialog.checked) {\r\n      localStorage.setItem(\"oe\", \"true\")\r\n    }\r\n\r\n    setDialog({...dialog, dialogOpen:false})\r\n    setShowContent(true)\r\n  }\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue)\r\n  }\r\n\r\n  const chooseYourGame = async (conditions) => {\r\n//    console.log('Game', conditions)\r\n    const results = await getResults(getMasterData, conditions, getNounById)\r\n    const inputConditions = Object.keys(results)\r\n      .map(key => results[key]\r\n      .map(item => {\r\n        return {\r\n          conditionType: key,\r\n          conditionId: +item.id\r\n      }\r\n      }))\r\n      .flat(1)\r\n\r\n    // const inputData = {conditions: inputConditions}\r\n    //const game = await createGame({variables: {inputData}})\r\n    setResults({...results, show: true, results})\r\n  }\r\n\r\n\r\n  return (\r\n    <Container fixed className={classes.container}>\r\n      {\r\n        dialog.dialogOpen && <DialogBasic \r\n          open={dialog.dialogOpen}\r\n          handleClose={() => setDialog({...dialog, dialogOpen: false})}\r\n          handleCancel={() => setDialog({...dialog, dialogOpen: false})} \r\n          checked={dialog.checked}\r\n          handleChangeSaveChoice={() => setDialog({...dialog, checked: !dialog.checked})}\r\n          handleAgree={handleUserConsent}\r\n          agreeText=\"Мне есть 18\"\r\n          disagreeText=\"Мне нет 18\" \r\n        />\r\n      }\r\n\r\n      {!results.show && showContent && <><Paper square>\r\n        <Tabs\r\n          value={value}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          onChange={handleChange}\r\n          variant=\"fullWidth\"\r\n        >\r\n          <Tab label=\"Простая игра\" className={classes.tab} />\r\n          <Tab label=\"Сложная игра\" className={classes.tab} />\r\n          <Tab label=\"FAQ\" disabled className={classes.tab} />\r\n        </Tabs>\r\n      </Paper>\r\n      <GameConditions variant = {value} gameOn={chooseYourGame}/></>\r\n      }\r\n      {\r\n        results.show && showContent && <GameResults results={results.results} back={() => setResults({show: false, results: {}})} />\r\n      }\r\n    </Container>\r\n\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { AppBar, Toolbar, IconButton, Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.primary.darklime,\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.secondary,\r\n    fontFamily: 'Oswald'\r\n  },\r\n  image: {\r\n    width: '30px', \r\n    height: '30px',\r\n    marginRight: theme.spacing(2)\r\n  }\r\n  }\r\n  ))\r\n\r\nexport const Header = () => {\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <AppBar position=\"static\" className={classes.root}>\r\n      <Toolbar>\r\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" size=\"medium\">\r\n          <img src={process.env.PUBLIC_URL+\"/images/Nie4040lime.png\"} alt=\"\" className={classes.image} />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" className={classes.title} >\r\n          НЕЧИСТАЯ ЮДОЛЬ\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nexport const Footer = () => <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">© a-gon.ru</Typography>","import React from 'react'\nimport './App.css'\nimport {Game} from './pages/Game'\nimport {Header} from './components/Header'\nimport {Footer} from './components/Footer'\n\nfunction App() {\n\n  const oldEnough = localStorage.getItem('oe')\n  \n  return (\n    <div className=\"App\">\n      <Header  />\n      <Game  oldEnough={oldEnough || false} />\n      <Footer />\n       \n    </div>\n  );\n}\n\nexport default App;\n","import { createMuiTheme } from '@material-ui/core/styles'\r\nimport lime from '@material-ui/core/colors/lime'\r\nimport yellow from '@material-ui/core/colors/yellow'\r\nimport grey from '@material-ui/core/colors/grey'\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {main : lime[900], secondary: lime[100], darklime: '#0a0901'},\r\n    secondary: {main: grey[900]},\r\n    error: {main: yellow[500]}\r\n  },\r\n  typography: {\r\n    fontFamily: 'Roboto, Helvetica, sans-serif'\r\n  },\r\n})\r\n\r\nexport default theme\r\n","import { ApolloClient, InMemoryCache, ApolloLink, HttpLink  } from '@apollo/client'\r\nimport { onError } from 'apollo-link-error'\r\n//import { setContext } from 'apollo-link-context'\r\n\r\n//const { createUploadLink } = require('apollo-upload-client')\r\n\r\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\r\n  if (graphQLErrors) \r\n    graphQLErrors.map(({ message, locations, path, extensions }) => {\r\n      console.log(\r\n      `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\r\n      )\r\n      //  if (extensions.code === \"UNAUTHENTICATED\") {\r\n      //   localStorage.removeItem('userId')\r\n      //   localStorage.removeItem('token')\r\n      //   localStorage.removeItem('username')\r\n      //   localStorage.removeItem('tokenExpiration')\r\n      //  } \r\n      }\r\n    )\r\n\r\n  if (networkError) console.log(`[Network error]: ${networkError}`)\r\n\r\n})\r\n\r\n// const authLink = setContext((_, { headers }) => {\r\n//   const token = localStorage.getItem('token')\r\n//   return {\r\n//     headers: {\r\n//       ...headers,\r\n//       authorization: token ? `Bearer ${token}` : \"\",\r\n//     }\r\n//   } \r\n// })\r\n\r\nconst link = ApolloLink.from([\r\n  errorLink,\r\n  new HttpLink({uri: process.env.REACT_APP_GRAPHQL_URI})\r\n // authLink,\r\n // createUploadLink({uri: process.env.REACT_APP_GRAPHQL_URI})\r\n])\r\n\r\nconst client = new ApolloClient({\r\n  link,\r\n  cache: new InMemoryCache({\r\n    freezeResults: true\r\n  }),\r\n  connectToDevTools: true\r\n})\r\n\r\nexport default client","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { ApolloProvider  } from '@apollo/client'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport theme from './theme/theme'\nimport client from './client'\n\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <React.StrictMode>\n      <MuiThemeProvider theme={theme}>\n        <App />\n      </MuiThemeProvider>\n    </React.StrictMode>\n  </ApolloProvider>\n  ,\n  document.getElementById('root')\n)\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}